/*! jQuery asCheck - v0.1.0 - 2014-09-05
* https://github.com/amazingSurge/jquery-asCheck
* Copyright (c) 2014 amazingSurge; Licensed GPL */
!function(a){var b=a.asCheck=function(c,d){this.$input=a(c);var e={group:this.$input.attr("name")};this.name=e.group?e.group:d.name,this.options=a.extend({},b.defaults,d,e),this.namespace=this.options.namespace,this.type=this.$input.attr("type"),this.checked=this.$input.prop("checked"),this.disabled=this.$input.prop("disabled")||this.options.disabled,this.classname={checked:this.namespace+"_checked",disabled:this.namespace+"_disabled",hover:this.namespace+"_hover"},this.initialized=!1,"radio"===this.type&&(this.$group=void 0===this.options.group?this.$input:a('input[name="'+this.options.group+'"]'));var f=this.$input.attr("id");this.$label=f?a('label[for="'+f+'"]'):null,this._trigger("init"),this.init()};b.prototype={constructor:b,init:function(){var b=this,c='<span class="'+this.namespace+'"></span>';this.$check=a(c),this.$input.css({display:"none"}).after(this.$check),this.$check.addClass("radio"===this.type?this.namespace+"_radio":this.namespace+"_checkbox"),null!==this.options.skin&&this.$check.addClass(this.namespace+"_"+this.options.skin),this.$input.trigger("asCheck::init",this),this.$check.add(this.$label).on("click.check",function(){return b.disabled===!0?!1:(b.trigger.call(b,b.type),!1)}),this.$check.add(this.$label).on("mouseenter.check",function(){return b.disabled===!0?!1:(b.$check.add(b.$label).addClass(b.classname.hover),!1)}).on("mouseleave.check",function(){return b.disabled===!0?!1:(b.$check.add(b.$label).removeClass(b.classname.hover),!1)}),this.set("checked",this.checked),this.set("disabled",this.disabled),this.initialized=!0,this._trigger("ready")},_trigger:function(a){var b,c=arguments.length>1?Array.prototype.slice.call(arguments,1):void 0;c?(b=c,b.push(this)):b=this,this.$input.trigger("asCheck::"+a,b),this.$input.trigger(a+".asCheck",b),a=a.replace(/\b\w+\b/g,function(a){return a.substring(0,1).toUpperCase()+a.substring(1)});var d="on"+a;"function"==typeof this.options[d]&&this.options[d].apply(this,c)},trigger:function(b){if("radio"===b){if(this.checked===!0)return!1;this.$group.each(function(b,c){a(c).prop("checked")===!0&&a(c).data("asCheck").set("checked",!1)}),this.set("checked",!0)}else this.checked===!0?this.set("checked",!1):this.set("checked",!0)},set:function(a,b){if(this.initialized===!0)if("checked"===a){if(this.checked===b)return}else if(this.disabled===b)return;switch(a){case"checked":b&&(this.checked=b,this.$check.addClass(this.classname.checked),this.$input.prop("checked",!0),this._trigger("change",this.checked,this.options.name,"asCheck")),b||(this.checked=b,this.$check.removeClass(this.classname.checked),this.$input.prop("checked",!1),"checkbox"===this.type&&this._trigger("change",this.checked,this.options.name,"asCheck"));break;case"disabled":b&&(this.disabled=b,this.enabled=!1,this.$check.addClass(this.classname.disabled),this.$input.prop("disabled",!0)),b||(this.disabled=b,this.enabled=!0,this.$check.removeClass(this.classname.disabled),this.$input.prop("disabled",!1))}},get:function(){return this.$input.prop("checked")},check:function(){return this.set("checked",!0),this},uncheck:function(){return this.set("checked",!1),this},enable:function(){return this.set("disabled",!0),this},disable:function(){return this.set("disabled",!1),this},destory:function(){this.$check.remove()}},b.defaults={namespace:"asCheck",skin:null,disabled:!1,checked:!0,name:null,onChange:function(){}},a.fn.asCheck=function(c){if("string"!=typeof c){var d=c||{};return d.$group=this,this.each(function(){a.data(this,"asCheck")||a.data(this,"asCheck",new b(this,d))})}var e=c,f=arguments.length>1?Array.prototype.slice.call(arguments,1):[];if(/^\_/.test(e))return!1;if("get"!==e&&("val"!==e||f!==[]))return this.each(function(){var b=a.data(this,"asCheck");b&&"function"==typeof b[e]&&b[e].apply(b,f)});var g=this.first().data("asCheck");return g&&"function"==typeof g[e]?g[e].apply(g,f):void 0}}(jQuery);