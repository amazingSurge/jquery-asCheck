{"version":3,"sources":["jquery-asCheck.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsCheckEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","skin","disabled","asCheck","input","options","arguments","undefined","$input","extend","data","type","attr","checked","prop","classname","hover","initialized","group","$group","_id","$label","_trigger","init","value","tpl","$check","css","display","after","addClass","set","_bindEvents","that","add","on","_eventName","toggle","removeClass","events","split","join","eventType","_len","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","apply","each","v","is","state","enabled","remove","isPlainObject","info","version"],"mappings":"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","file":"jquery-asCheck.min.js","sourcesContent":["/**\n* jQuery asCheck v0.2.3\n* https://github.com/amazingSurge/jquery-asCheck\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\n/* eslint no-empty-function: \"off\" */\nvar DEFAULTS = {\n  namespace: 'asCheck',\n  skin: null,\n\n  disabled: false\n};\n\nconst NAMESPACE$1 = 'asCheck';\n\n/**\n * Plugin constructor\n **/\nclass asCheck {\n  constructor(input, options = {}) {\n    this.$input = $(input);\n\n    this.options = $.extend({}, DEFAULTS, options, this.$input.data());\n    this.namespace = this.options.namespace;\n    this.type = this.$input.attr('type');\n\n    this.checked = this.$input.prop('checked');\n    this.disabled = this.$input.prop('disabled') || this.options.disabled;\n\n    this.classname = {\n      checked: `${this.namespace}_checked`,\n      disabled: `${this.namespace}_disabled`,\n      hover: `${this.namespace}_hover`\n    };\n\n    this.initialized = false;\n\n    if (this.options.group === undefined) {\n      this.options.group = this.$input.attr('name');\n    }\n\n    if (this.type === 'radio') {\n      this.$group = $(`input[name=\"${this.options.group}\"]`);\n    }\n\n    const _id = this.$input.attr('id');\n\n    if (_id) {\n      this.$label = $(`label[for=\"${_id}\"]`);\n    } else {\n      this.$label = null;\n    }\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const tpl = `<span class=\"${this.namespace}\"></span>`;\n\n    this.$check = $(tpl);\n    this.$input.css({\n      display: 'none'\n    }).after(this.$check);\n\n    if (this.type === 'radio') {\n      this.$check.addClass(`${this.namespace}_radio`);\n    } else {\n      this.$check.addClass(`${this.namespace}_checkbox`);\n    }\n\n    if (this.options.skin !== null) {\n      this.$check.addClass(`${this.namespace}_${this.options.skin}`);\n    }\n\n    this.set('checked', this.checked);\n    this.set('disabled', this.disabled);\n\n    this._bindEvents();\n\n    this.initialized = true;\n    this._trigger('ready');\n  }\n\n  _bindEvents(){\n    const that = this;\n\n    this.$check.add(this.$label).on(this._eventName('click'), () => {\n      if (that.disabled === true) {\n        return false;\n      }\n\n      that.toggle(that.type);\n      return false;\n    });\n\n    this.$check.add(this.$label).on(this._eventName('mouseenter'), () => {\n      if (that.disabled === true) {\n        return false;\n      }\n      that.$check.add(that.$label).addClass(that.classname.hover);\n      return false;\n    }).on(this._eventName('mouseleave'), () => {\n      if (that.disabled === true) {\n        return false;\n      }\n\n      that.$check.add(that.$label).removeClass(that.classname.hover);\n      return false;\n    });\n  }\n\n  _eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n    events = events.split(' ');\n\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$input.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  toggle(type) {\n    if (type === 'radio') {\n      if (this.checked === true) {\n        return;\n      }\n\n      this.$group.each((i, v) => {\n        if ($(v).is(':checked')) {\n\n          $(v).asCheck('set', 'checked', false);\n        }\n      });\n      this.set('checked', true);\n    } else {\n      /* eslint no-lonely-if: \"off\" */\n      if (this.checked === true) {\n        this.set('checked', false);\n      } else {\n        this.set('checked', true);\n      }\n    }\n  }\n\n  set(state, value) {\n    switch (state) {\n      case 'checked':\n        if (value === true) {\n          this.checked = value;\n          this.$check.addClass(this.classname.checked);\n          this.$input.prop('checked', true);\n\n          if(this.initialized) {\n            this._trigger('change', this.checked);\n          }\n        } else {\n          this.checked = value;\n          this.$check.removeClass(this.classname.checked);\n          this.$input.prop('checked', false);\n\n          if (this.type === 'checkbox') {\n            if(this.initialized) {\n              this._trigger('change', this.checked);\n            }\n          }\n        }\n        break;\n      case 'disabled':\n        if (value) {\n          this.disabled = value;\n          this.enabled = false;\n          this.$check.addClass(this.classname.disabled);\n          this.$input.prop('disabled', true);\n        }\n        if (!value) {\n          this.disabled = value;\n          this.enabled = true;\n          this.$check.removeClass(this.classname.disabled);\n          this.$input.prop('disabled', false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  get() {\n    return this.$input.prop('checked');\n  }\n\n  check() {\n    this.set('checked', true);\n    return this;\n  }\n\n  uncheck() {\n    this.set('checked', false);\n    return this;\n  }\n\n  enable() {\n    this.set('disabled', true);\n    this._trigger('enable');\n    return this;\n  }\n\n  disable() {\n    this.set('disabled', false);\n    this._trigger('disable');\n\n    return this;\n  }\n\n  destroy() {\n    this.$check.remove();\n    this._trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.3'\n};\n\nconst NAMESPACE = 'asCheck';\nconst OtherAsCheck = $.fn.asCheck;\n\nconst jQueryAsCheck = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asCheck(this, options));\n    }\n  });\n};\n\n$.fn.asCheck = jQueryAsCheck;\n\n$.asCheck = $.extend({\n  setDefaults: asCheck.setDefaults,\n  noConflict: function() {\n    $.fn.asCheck = OtherAsCheck;\n    return jQueryAsCheck;\n  }\n}, info);\n"]}