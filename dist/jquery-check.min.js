/*! jQuery Check - v0.1.0 - 2014-03-24
* https://github.com/amazingSurge/jquery-check
* Copyright (c) 2014 amazingSurge; Licensed GPL */
(function(e){var t=e.asCheck=function(i,s){this.$input=e(i);var h={group:this.$input.attr("name")};this.options=e.extend({},t.defaults,s,h),this.namespace=this.options.namespace,this.type=this.$input.attr("type"),this.checked=this.$input.prop("checked"),this.disabled=this.$input.prop("disabled")||this.options.disabled,this.classname={checked:this.namespace+"_checked",disabled:this.namespace+"_disabled",hover:this.namespace+"_hover"},this.initialized=!1,"radio"===this.type&&(this.$group=void 0===this.options.group?this.$input:e('input[name="'+this.options.group+'"]'));var c=this.$input.attr("id");this.$label=c?e('label[for="'+c+'"]'):null,this.init(),this.$input.trigger("asCheck::ready",this)};t.prototype={constructor:t,init:function(){var t=this,i='<span class="'+this.namespace+'"></span>';this.$check=e(i),this.$input.css({display:"none"}).after(this.$check),"radio"===this.type?this.$check.addClass(this.namespace+"_radio"):this.$check.addClass(this.namespace+"_checkbox"),null!==this.options.skin&&this.$check.addClass(this.namespace+"_"+this.options.skin),this.$input.trigger("asCheck::init",this),this.$check.add(this.$label).on("click.check",function(){return t.disabled===!0?!1:(t.trigger.call(t,t.type),!1)}),this.$check.add(this.$label).on("mouseenter.check",function(){return t.disabled===!0?!1:(t.$check.add(t.$label).addClass(t.classname.hover),!1)}).on("mouseleave.check",function(){return t.disabled===!0?!1:(t.$check.add(t.$label).removeClass(t.classname.hover),!1)}),this.set("checked",this.checked),this.set("disabled",this.disabled),this.initialized=!0},trigger:function(t){if("radio"===t){if(this.checked===!0)return!1;this.$group.each(function(t,i){e(i).prop("checked")===!0&&e(i).data("check").set("checked",!1)}),this.set("checked",!0)}else this.checked===!0?this.set("checked",!1):this.set("checked",!0)},set:function(e,t){if(this.initialized===!0)if("checked"===e){if(this.checked===t)return}else if(this.disabled===t)return;switch(e){case"checked":t===!0&&(this.checked=t,this.$check.addClass(this.classname.checked),this.$input.prop("checked",!0),this.$input.trigger("asCheck::change",this),"function"==typeof this.options.onChange&&this.options.onChange.call(this,this.checked)),t===!1&&(this.checked=t,this.$check.removeClass(this.classname.checked),this.$input.prop("checked",!1),"checkbox"===this.type&&"function"==typeof this.options.onChange&&(this.$input.trigger("asCheck::change",this),this.options.onChange.call(this,this.checked)));break;case"disabled":t===!0&&(this.disabled=t,this.enabled=!1,this.$check.addClass(this.classname.disabled),this.$input.prop("disabled",!0)),t===!1&&(this.disabled=t,this.enabled=!0,this.$check.removeClass(this.classname.disabled),this.$input.prop("disabled",!1))}},check:function(){return this.set("checked",!0),this},uncheck:function(){return this.set("checked",!1),this},enable:function(){return this.set("disabled",!0),this},disable:function(){return this.set("disabled",!1),this},destory:function(){this.$check.remove()}},t.defaults={namespace:"check",skin:null,disabled:!1,checked:!0,onChange:function(){}},e.fn.asCheck=function(i){if("string"==typeof i){var s=i,h=arguments.length>1?Array.prototype.slice.call(arguments,1):void 0;return this.each(function(){var t=e.data(this,"check");"function"==typeof t[s]&&t[s].apply(t,h)})}var c=i||{};return c.$group=this,this.each(function(){e.data(this,"check")||e.data(this,"check",new t(this,c))})}})(jQuery);